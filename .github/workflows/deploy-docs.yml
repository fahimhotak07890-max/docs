name: Deploy docs

on:
  push:
    branches:
      - '**'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Fetch versions.yml from main
        run: |
          git fetch origin main
          if git ls-tree -r origin/main --name-only | grep -q '^versions.yml$'; then
            git checkout origin/main -- versions.yml
          else
            echo "versions.yml not found in main. Exiting."
            exit 1
          fi

      - name: Parse versions.yml for this branch
        id: vars
        run: |
          python3 <<EOF
          import os, sys, yaml

          branch = os.environ["GITHUB_REF_NAME"]
          print(f"::group::Parsing versions.yml for branch '{branch}'")

          with open("versions.yml") as f:
              data = yaml.safe_load(f)

          match = next((v for v in data["versions"] if v["branch"] == branch), None)
          if not match:
              print(f"::notice:: No match for branch {branch}. Exiting.")
              sys.exit(0)

          for key in ("version", "title", "aliases"):
              if key not in match:
                  print(f"::error:: Missing key '{key}' in entry for branch {branch}")
                  sys.exit(1)

          version = match["version"]
          title = match["title"]
          aliases = match["aliases"]
          default = 'true' if match.get('default', False) else 'false'

          print(f"version: {version}")
          print(f"title: {title}")
          print(f"aliases: {aliases}")
          print(f"default: {default}")

          with open(os.environ["GITHUB_OUTPUT"], "a") as ghout:
              ghout.write(f"version={version}\n")
              ghout.write(f"title={title}\n")
              ghout.write(f"aliases={' '.join(aliases)}\n")
              ghout.write(f"default={default}\n")
          EOF

      - name: Set up Python and install requirements
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Checkout branch content
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Configure git identity
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Ensure gh-pages branch exists
        run: |
          if ! git ls-remote --exit-code --heads origin gh-pages > /dev/null; then
            echo "gh-pages branch not found. Initializing with dummy version."
            mike deploy --push --update-aliases --allow-empty dummy
            mike delete --push dummy
          else
            echo "gh-pages branch already exists."
          fi

      - name: Deploy site with mike (no push yet)
        run: |
          mike deploy --update-aliases --allow-empty \
            "${{ steps.vars.outputs.version }}" \
            ${{ steps.vars.outputs.aliases }}

      - name: Make dummy change in gh-pages to enable retitle commit
        run: |
          mkdir -p .meta
          echo "build: $(date -u +"%Y-%m-%dT%H:%M:%SZ")" > .meta/last-build.txt
          git add .meta/last-build.txt

      - name: Retitle version for mike
        run: mike retitle "${{ steps.vars.outputs.version }}" "${{ steps.vars.outputs.title }}"

      - name: Set aliases for mike
        run: |
          if [ -z "${{ steps.vars.outputs.aliases }}" ]; then
            mike alias "${{ steps.vars.outputs.version }}"
          else
            mike alias "${{ steps.vars.outputs.version }}" ${{ steps.vars.outputs.aliases }}
          fi

      - name: Set default version (if applicable)
        if: ${{ steps.vars.outputs.default == 'true' }}
        run: mike set-default "${{ steps.vars.outputs.version }}"

      - name: Commit and push to gh-pages
        run: |
          git commit -am "Update version metadata and trigger deploy" || echo "No changes to commit"
          git push origin gh-pages

      - name: Final reminder
        run: |
          echo "⚠️ If you've deleted and rebuilt the gh-pages branch:"
          echo "➡️  Re-enable GitHub Pages publishing under repo → Settings → Pages"
          echo
          echo "⚠️ If no default version is set in versions.json:"
          echo "➡️  The site will 404 at its root URL. Set one using:"
          echo "    mike set-default <version> && git push origin gh-pages"
